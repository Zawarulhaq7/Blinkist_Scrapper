,Book Name,Author Name,About Book,About Author,Summary 
0,Radical Product Thinking,R. Dutt,"Radical Product Thinking (2021)lays out a step-by-step approach to developing game-changing products. Taking aim at the iteration-led approaches to product development that have become popular in recent years, it provides an inspiring, vision-driven alternative. ","R. Dutt is an entrepreneur, a product thinking advisor at the Monetary Authority of Singapore, and an instructor in entrepreneurship at Northeastern University’s D’Amore-McKim School of Business. She was the cofounder of Lobby7 and Likelii, and she’s worked in key positions at Starent Networks and Allant. Radical Product Thinking is her first book."," How do you create a visionary product like the iPhone?  Well, it helps to be an equally visionary genius like Steve Jobs. Some people are just blessed with an intuitive understanding of how to turn game-changing ideas into realities.  But what about the rest of us? We need a more deliberate, systematic approach. Enter Radical Product Thinking, or RPT – a step-by-step method for envisioning, building, and delivering innovative, vision-driven products that have a positive impact on the world.  In these blinks, you’ll learn How do you create a visionary product like the iPhone?  Well, it helps to be an equally visionary genius like Steve Jobs. Some people are just blessed with an intuitive understanding of how to turn game-changing ideas into realities.  But what about the rest of us? We need a more deliberate, systematic approach. Enter Radical Product Thinking, or RPT – a step-by-step method for envisioning, building, and delivering innovative, vision-driven products that have a positive impact on the world.  In these blinks, you’ll learn How do you create a visionary product like the iPhone?  Well, it helps to be an equally visionary genius like Steve Jobs. Some people are just blessed with an intuitive understanding of how to turn game-changing ideas into realities.  But what about the rest of us? We need a more deliberate, systematic approach. Enter Radical Product Thinking, or RPT – a step-by-step method for envisioning, building, and delivering innovative, vision-driven products that have a positive impact on the world.  In these blinks, you’ll learn How do you create a visionary product like the iPhone?  Well, it helps to be an equally visionary genius like Steve Jobs. Some people are just blessed with an intuitive understanding of how to turn game-changing ideas into realities.  But what about the rest of us? We need a more deliberate, systematic approach. Enter Radical Product Thinking, or RPT – a step-by-step method for envisioning, building, and delivering innovative, vision-driven products that have a positive impact on the world.  In these blinks, you’ll learn Once upon a time – in 2005, to be exact – there was a scrappy little start-up named Odeo. They were busy working on their product, when, one day, they received some terrible news: Apple was about to release a new app called iTunes, which would include a built-in podcasting platform.  The problem? Odeo’s product was also a podcasting platform. Surely they couldn’t compete with a tech giant like Apple. The founders knew they had to pivot, so they asked their employees for suggestions.  One of them had a promising idea: a service that would allow users to share status updates. The idea went through multiple iterations, until it finally became a microblogging platform. The employee’s name was Jack Dorsey, and the platform was called Twitter.  Want to follow their lead and iterate your own way to the Next Big Thing? Well, think again. The key message here is: An iteration-led approach to product development rarely leads to revolutionary products.  Buoyed by success stories like Twitter, “iteration” has become the name of the game for many product developers in recent years. With an iteration-led approach to product development, you don’t start with a clear vision of what you want your product to be. Instead, you just take whatever you already have, try to make improvements on it, and come up with new versions, or iterations, of it. Then, you keep iterating until you stumble upon a winner – anything that helps you achieve your immediate objectives, like capturing market share.  If you’re exceedingly lucky, you end up with the next Twitter. But more often, you end up with a lackluster product like the Chevy Bolt – GM’s flagship electric car.  Now, there’s nothing terrible about this vehicle. There’s just nothing groundbreaking either. And that’s because, when developing it, GM didn’t have a clear vision of what they wanted to build. They simply wanted to bring a commercially viable electric car to the market as quickly and cheaply as possible, to compete with Tesla.  With that aim in mind, they took an iteration-led approach. For instance, rather than designing a brand-new chassis, they borrowed the one they already had in their gas-powered Chevy Spark and built on top of it.  The result? An electrified evolution of an old car, rather than an electrifying revolution in the automobile industry, like the one Tesla has been leading with its trailblazing Model 3.  Once upon a time – in 2005, to be exact – there was a scrappy little start-up named Odeo. They were busy working on their product, when, one day, they received some terrible news: Apple was about to release a new app called iTunes, which would include a built-in podcasting platform.  The problem? Odeo’s product was also a podcasting platform. Surely they couldn’t compete with a tech giant like Apple. The founders knew they had to pivot, so they asked their employees for suggestions.  One of them had a promising idea: a service that would allow users to share status updates. The idea went through multiple iterations, until it finally became a microblogging platform. The employee’s name was Jack Dorsey, and the platform was called Twitter.  Want to follow their lead and iterate your own way to the Next Big Thing? Well, think again. The key message here is: An iteration-led approach to product development rarely leads to revolutionary products.  Buoyed by success stories like Twitter, “iteration” has become the name of the game for many product developers in recent years. With an iteration-led approach to product development, you don’t start with a clear vision of what you want your product to be. Instead, you just take whatever you already have, try to make improvements on it, and come up with new versions, or iterations, of it. Then, you keep iterating until you stumble upon a winner – anything that helps you achieve your immediate objectives, like capturing market share.  If you’re exceedingly lucky, you end up with the next Twitter. But more often, you end up with a lackluster product like the Chevy Bolt – GM’s flagship electric car.  Now, there’s nothing terrible about this vehicle. There’s just nothing groundbreaking either. And that’s because, when developing it, GM didn’t have a clear vision of what they wanted to build. They simply wanted to bring a commercially viable electric car to the market as quickly and cheaply as possible, to compete with Tesla.  With that aim in mind, they took an iteration-led approach. For instance, rather than designing a brand-new chassis, they borrowed the one they already had in their gas-powered Chevy Spark and built on top of it.  The result? An electrified evolution of an old car, rather than an electrifying revolution in the automobile industry, like the one Tesla has been leading with its trailblazing Model 3.  Once upon a time – in 2005, to be exact – there was a scrappy little start-up named Odeo. They were busy working on their product, when, one day, they received some terrible news: Apple was about to release a new app called iTunes, which would include a built-in podcasting platform.  The problem? Odeo’s product was also a podcasting platform. Surely they couldn’t compete with a tech giant like Apple. The founders knew they had to pivot, so they asked their employees for suggestions.  One of them had a promising idea: a service that would allow users to share status updates. The idea went through multiple iterations, until it finally became a microblogging platform. The employee’s name was Jack Dorsey, and the platform was called Twitter.  Want to follow their lead and iterate your own way to the Next Big Thing? Well, think again. The key message here is: An iteration-led approach to product development rarely leads to revolutionary products.  Buoyed by success stories like Twitter, “iteration” has become the name of the game for many product developers in recent years. With an iteration-led approach to product development, you don’t start with a clear vision of what you want your product to be. Instead, you just take whatever you already have, try to make improvements on it, and come up with new versions, or iterations, of it. Then, you keep iterating until you stumble upon a winner – anything that helps you achieve your immediate objectives, like capturing market share.  If you’re exceedingly lucky, you end up with the next Twitter. But more often, you end up with a lackluster product like the Chevy Bolt – GM’s flagship electric car.  Now, there’s nothing terrible about this vehicle. There’s just nothing groundbreaking either. And that’s because, when developing it, GM didn’t have a clear vision of what they wanted to build. They simply wanted to bring a commercially viable electric car to the market as quickly and cheaply as possible, to compete with Tesla.  With that aim in mind, they took an iteration-led approach. For instance, rather than designing a brand-new chassis, they borrowed the one they already had in their gas-powered Chevy Spark and built on top of it.  The result? An electrified evolution of an old car, rather than an electrifying revolution in the automobile industry, like the one Tesla has been leading with its trailblazing Model 3.  Once upon a time – in 2005, to be exact – there was a scrappy little start-up named Odeo. They were busy working on their product, when, one day, they received some terrible news: Apple was about to release a new app called iTunes, which would include a built-in podcasting platform.  The problem? Odeo’s product was also a podcasting platform. Surely they couldn’t compete with a tech giant like Apple. The founders knew they had to pivot, so they asked their employees for suggestions.  One of them had a promising idea: a service that would allow users to share status updates. The idea went through multiple iterations, until it finally became a microblogging platform. The employee’s name was Jack Dorsey, and the platform was called Twitter.  Want to follow their lead and iterate your own way to the Next Big Thing? Well, think again. The key message here is: An iteration-led approach to product development rarely leads to revolutionary products.  Buoyed by success stories like Twitter, “iteration” has become the name of the game for many product developers in recent years. With an iteration-led approach to product development, you don’t start with a clear vision of what you want your product to be. Instead, you just take whatever you already have, try to make improvements on it, and come up with new versions, or iterations, of it. Then, you keep iterating until you stumble upon a winner – anything that helps you achieve your immediate objectives, like capturing market share.  If you’re exceedingly lucky, you end up with the next Twitter. But more often, you end up with a lackluster product like the Chevy Bolt – GM’s flagship electric car.  Now, there’s nothing terrible about this vehicle. There’s just nothing groundbreaking either. And that’s because, when developing it, GM didn’t have a clear vision of what they wanted to build. They simply wanted to bring a commercially viable electric car to the market as quickly and cheaply as possible, to compete with Tesla.  With that aim in mind, they took an iteration-led approach. For instance, rather than designing a brand-new chassis, they borrowed the one they already had in their gas-powered Chevy Spark and built on top of it.  The result? An electrified evolution of an old car, rather than an electrifying revolution in the automobile industry, like the one Tesla has been leading with its trailblazing Model 3.  What makes the Tesla Model 3 revolutionary?  Well, first and foremost, it’s the vision behind the product. Unlike GM, Tesla didn’t just want to bring an electric vehicle to the market. They wanted to build a car that would accelerate the world’s transition away from fossil fuels. How? By enabling drivers to go electric without compromising performance or breaking the bank.  But they didn’t just write down a vague vision statement, stick it on their website, and promptly forget about it. Instead, they made sure their vision informed every decision and innovation they made while developing the Model 3.  In doing so, they took a vision-driven approach to product development. This was the secret to their success – and it could be yours, too.  Here’s the key message: A vision-driven approach to product development provides a better alternative to iteration. The problem with an iteration-led approach is that without a vision, all you’re left with are short-term business goals by which to evaluate each new iteration. These goals are often quantified as Key Performance Indicators, or KPIs, such as revenue and user numbers, which you then become obsessed with boosting.  But this can lead you to lose sight of what’s important. Let’s say the latest iteration of your website increases the time people spend on it – a common customer engagement metric. Great! Or maybe not. Perhaps your goal should be enabling your customers to take care of their business and get off the site as quickly as possible. A short-term, vision-less mindset can also lead to corner-cutting. If you just want to capture market share on the cheap, why not just throw an electric car on top of an old gasoline-powered car’s chassis, like GM did?  In contrast, Tesla built the Model 3 from the ground up, keeping their eye on the prize at every step of the development process. With each component of the car, they asked themselves, “How can we maximize this part’s efficiency, so it will contribute to our goal of achieving both high performance and affordability?”  This led to a slew of cutting-edge innovations that worked together as a unified, vision-driven whole – like a single cooling system for the entire car, instead of separate systems for the battery, motor, cabin, and so on, as in other electric vehicles. That’s how they turned their vision into a game-changing reality. What makes the Tesla Model 3 revolutionary?  Well, first and foremost, it’s the vision behind the product. Unlike GM, Tesla didn’t just want to bring an electric vehicle to the market. They wanted to build a car that would accelerate the world’s transition away from fossil fuels. How? By enabling drivers to go electric without compromising performance or breaking the bank.  But they didn’t just write down a vague vision statement, stick it on their website, and promptly forget about it. Instead, they made sure their vision informed every decision and innovation they made while developing the Model 3.  In doing so, they took a vision-driven approach to product development. This was the secret to their success – and it could be yours, too.  Here’s the key message: A vision-driven approach to product development provides a better alternative to iteration. The problem with an iteration-led approach is that without a vision, all you’re left with are short-term business goals by which to evaluate each new iteration. These goals are often quantified as Key Performance Indicators, or KPIs, such as revenue and user numbers, which you then become obsessed with boosting.  But this can lead you to lose sight of what’s important. Let’s say the latest iteration of your website increases the time people spend on it – a common customer engagement metric. Great! Or maybe not. Perhaps your goal should be enabling your customers to take care of their business and get off the site as quickly as possible. A short-term, vision-less mindset can also lead to corner-cutting. If you just want to capture market share on the cheap, why not just throw an electric car on top of an old gasoline-powered car’s chassis, like GM did?  In contrast, Tesla built the Model 3 from the ground up, keeping their eye on the prize at every step of the development process. With each component of the car, they asked themselves, “How can we maximize this part’s efficiency, so it will contribute to our goal of achieving both high performance and affordability?”  This led to a slew of cutting-edge innovations that worked together as a unified, vision-driven whole – like a single cooling system for the entire car, instead of separate systems for the battery, motor, cabin, and so on, as in other electric vehicles. That’s how they turned their vision into a game-changing reality. What makes the Tesla Model 3 revolutionary?  Well, first and foremost, it’s the vision behind the product. Unlike GM, Tesla didn’t just want to bring an electric vehicle to the market. They wanted to build a car that would accelerate the world’s transition away from fossil fuels. How? By enabling drivers to go electric without compromising performance or breaking the bank.  But they didn’t just write down a vague vision statement, stick it on their website, and promptly forget about it. Instead, they made sure their vision informed every decision and innovation they made while developing the Model 3.  In doing so, they took a vision-driven approach to product development. This was the secret to their success – and it could be yours, too.  Here’s the key message: A vision-driven approach to product development provides a better alternative to iteration. The problem with an iteration-led approach is that without a vision, all you’re left with are short-term business goals by which to evaluate each new iteration. These goals are often quantified as Key Performance Indicators, or KPIs, such as revenue and user numbers, which you then become obsessed with boosting.  But this can lead you to lose sight of what’s important. Let’s say the latest iteration of your website increases the time people spend on it – a common customer engagement metric. Great! Or maybe not. Perhaps your goal should be enabling your customers to take care of their business and get off the site as quickly as possible. A short-term, vision-less mindset can also lead to corner-cutting. If you just want to capture market share on the cheap, why not just throw an electric car on top of an old gasoline-powered car’s chassis, like GM did?  In contrast, Tesla built the Model 3 from the ground up, keeping their eye on the prize at every step of the development process. With each component of the car, they asked themselves, “How can we maximize this part’s efficiency, so it will contribute to our goal of achieving both high performance and affordability?”  This led to a slew of cutting-edge innovations that worked together as a unified, vision-driven whole – like a single cooling system for the entire car, instead of separate systems for the battery, motor, cabin, and so on, as in other electric vehicles. That’s how they turned their vision into a game-changing reality. What makes the Tesla Model 3 revolutionary?  Well, first and foremost, it’s the vision behind the product. Unlike GM, Tesla didn’t just want to bring an electric vehicle to the market. They wanted to build a car that would accelerate the world’s transition away from fossil fuels. How? By enabling drivers to go electric without compromising performance or breaking the bank.  But they didn’t just write down a vague vision statement, stick it on their website, and promptly forget about it. Instead, they made sure their vision informed every decision and innovation they made while developing the Model 3.  In doing so, they took a vision-driven approach to product development. This was the secret to their success – and it could be yours, too.  Here’s the key message: A vision-driven approach to product development provides a better alternative to iteration. The problem with an iteration-led approach is that without a vision, all you’re left with are short-term business goals by which to evaluate each new iteration. These goals are often quantified as Key Performance Indicators, or KPIs, such as revenue and user numbers, which you then become obsessed with boosting.  But this can lead you to lose sight of what’s important. Let’s say the latest iteration of your website increases the time people spend on it – a common customer engagement metric. Great! Or maybe not. Perhaps your goal should be enabling your customers to take care of their business and get off the site as quickly as possible. A short-term, vision-less mindset can also lead to corner-cutting. If you just want to capture market share on the cheap, why not just throw an electric car on top of an old gasoline-powered car’s chassis, like GM did?  In contrast, Tesla built the Model 3 from the ground up, keeping their eye on the prize at every step of the development process. With each component of the car, they asked themselves, “How can we maximize this part’s efficiency, so it will contribute to our goal of achieving both high performance and affordability?”  This led to a slew of cutting-edge innovations that worked together as a unified, vision-driven whole – like a single cooling system for the entire car, instead of separate systems for the battery, motor, cabin, and so on, as in other electric vehicles. That’s how they turned their vision into a game-changing reality. Without a vision, your product is like a car without a destination. Sure, you can make it faster by iterating on it – but what’s the point if you’re not sure where you want to go? You might end up speeding down the wrong road.  Corner-cutting and KPI-fixation are just two of the dead ends you might hit. You could also fall into the trap of aimlessly pivoting from one half-baked idea to another. Or you might let your product get bogged down or blown off course with extraneous add-on features, just to satisfy the whims of individual customers, investors, or board members.  Faced with these temptations, you can’t stay focused on your vision – because you don’t have one in the first place. And that brings us to step one of RPT’s vision-driven approach to product development: creating a vision.  The key message is this: To create a clear and compelling vision, make it problem-centered, concrete, and meaningful.  Many companies have vision statements, but most of them fail to answer a few crucial questions.  To begin with, what problem do you want your product to solve for the world? The crucial words here are “for the world.” Don’t focus on what you want to accomplish for yourself, like becoming a billion-dollar company or the leader in your industry. Focus on the change you want to create for other people.  For instance, Indian food and consumer goods producer Lijjat doesn’t just want to sell lots of papadams – the delicious lentil crackers for which they’re renowned. They want to help solve the socioeconomic problems facing impoverished women in India by providing them with a sustainable way of earning a dignified living and becoming financially independent.  That’s both a concrete and a meaningful vision. It’s centered on a noble goal, which makes it meaningful to anyone who engages with the company. But it’s not just a vague, uplifting message, like “empowering women.” It’s a concrete description of a specific change that Lijjat wants to create for a specific group of people facing a specific set of problems.  Who, exactly, are you trying to help? What, exactly, is the solution your product will bring them? And why is that meaningful to you and the people whose lives you want to affect? These are the questions you need to answer. Without a vision, your product is like a car without a destination. Sure, you can make it faster by iterating on it – but what’s the point if you’re not sure where you want to go? You might end up speeding down the wrong road.  Corner-cutting and KPI-fixation are just two of the dead ends you might hit. You could also fall into the trap of aimlessly pivoting from one half-baked idea to another. Or you might let your product get bogged down or blown off course with extraneous add-on features, just to satisfy the whims of individual customers, investors, or board members.  Faced with these temptations, you can’t stay focused on your vision – because you don’t have one in the first place. And that brings us to step one of RPT’s vision-driven approach to product development: creating a vision.  The key message is this: To create a clear and compelling vision, make it problem-centered, concrete, and meaningful.  Many companies have vision statements, but most of them fail to answer a few crucial questions.  To begin with, what problem do you want your product to solve for the world? The crucial words here are “for the world.” Don’t focus on what you want to accomplish for yourself, like becoming a billion-dollar company or the leader in your industry. Focus on the change you want to create for other people.  For instance, Indian food and consumer goods producer Lijjat doesn’t just want to sell lots of papadams – the delicious lentil crackers for which they’re renowned. They want to help solve the socioeconomic problems facing impoverished women in India by providing them with a sustainable way of earning a dignified living and becoming financially independent.  That’s both a concrete and a meaningful vision. It’s centered on a noble goal, which makes it meaningful to anyone who engages with the company. But it’s not just a vague, uplifting message, like “empowering women.” It’s a concrete description of a specific change that Lijjat wants to create for a specific group of people facing a specific set of problems.  Who, exactly, are you trying to help? What, exactly, is the solution your product will bring them? And why is that meaningful to you and the people whose lives you want to affect? These are the questions you need to answer. Without a vision, your product is like a car without a destination. Sure, you can make it faster by iterating on it – but what’s the point if you’re not sure where you want to go? You might end up speeding down the wrong road.  Corner-cutting and KPI-fixation are just two of the dead ends you might hit. You could also fall into the trap of aimlessly pivoting from one half-baked idea to another. Or you might let your product get bogged down or blown off course with extraneous add-on features, just to satisfy the whims of individual customers, investors, or board members.  Faced with these temptations, you can’t stay focused on your vision – because you don’t have one in the first place. And that brings us to step one of RPT’s vision-driven approach to product development: creating a vision.  The key message is this: To create a clear and compelling vision, make it problem-centered, concrete, and meaningful.  Many companies have vision statements, but most of them fail to answer a few crucial questions.  To begin with, what problem do you want your product to solve for the world? The crucial words here are “for the world.” Don’t focus on what you want to accomplish for yourself, like becoming a billion-dollar company or the leader in your industry. Focus on the change you want to create for other people.  For instance, Indian food and consumer goods producer Lijjat doesn’t just want to sell lots of papadams – the delicious lentil crackers for which they’re renowned. They want to help solve the socioeconomic problems facing impoverished women in India by providing them with a sustainable way of earning a dignified living and becoming financially independent.  That’s both a concrete and a meaningful vision. It’s centered on a noble goal, which makes it meaningful to anyone who engages with the company. But it’s not just a vague, uplifting message, like “empowering women.” It’s a concrete description of a specific change that Lijjat wants to create for a specific group of people facing a specific set of problems.  Who, exactly, are you trying to help? What, exactly, is the solution your product will bring them? And why is that meaningful to you and the people whose lives you want to affect? These are the questions you need to answer. Without a vision, your product is like a car without a destination. Sure, you can make it faster by iterating on it – but what’s the point if you’re not sure where you want to go? You might end up speeding down the wrong road.  Corner-cutting and KPI-fixation are just two of the dead ends you might hit. You could also fall into the trap of aimlessly pivoting from one half-baked idea to another. Or you might let your product get bogged down or blown off course with extraneous add-on features, just to satisfy the whims of individual customers, investors, or board members.  Faced with these temptations, you can’t stay focused on your vision – because you don’t have one in the first place. And that brings us to step one of RPT’s vision-driven approach to product development: creating a vision.  The key message is this: To create a clear and compelling vision, make it problem-centered, concrete, and meaningful.  Many companies have vision statements, but most of them fail to answer a few crucial questions.  To begin with, what problem do you want your product to solve for the world? The crucial words here are “for the world.” Don’t focus on what you want to accomplish for yourself, like becoming a billion-dollar company or the leader in your industry. Focus on the change you want to create for other people.  For instance, Indian food and consumer goods producer Lijjat doesn’t just want to sell lots of papadams – the delicious lentil crackers for which they’re renowned. They want to help solve the socioeconomic problems facing impoverished women in India by providing them with a sustainable way of earning a dignified living and becoming financially independent.  That’s both a concrete and a meaningful vision. It’s centered on a noble goal, which makes it meaningful to anyone who engages with the company. But it’s not just a vague, uplifting message, like “empowering women.” It’s a concrete description of a specific change that Lijjat wants to create for a specific group of people facing a specific set of problems.  Who, exactly, are you trying to help? What, exactly, is the solution your product will bring them? And why is that meaningful to you and the people whose lives you want to affect? These are the questions you need to answer. Once you have a clear and compelling vision, you’ll see your product in a whole new light. It’s no longer just an electric car, a papadam, or whatever the case may be. It’s a mechanism for creating the change you want to see in the world. The question then becomes, how do you put that mechanism into motion? Well, you need to create a strategy – the next step of the RPT approach to product development.  RPT has a nifty mnemonic for remembering the main components of a winning, vision-driven strategy: RDCL, pronounced “radical.” It stands for: Real pain points, Design, Capabilities, and Logistics. Put these ingredients together, and you’ll be ready to put your vision into practice.  The key message here is: Learn people’s real pain points, so you know the design, capabilities, and logistics your product needs to succeed.  In 1959, Lijjat began as a team of seven people rolling out papadams on a terrace. Today, they employ over 45,000 women. One of the keys to that success has been knowing the real pain points of impoverished women in India.  These women live in a deeply patriarchal society, where they have little control over their household income, carry the burden of being their families’ primary caregivers, and lack access to formal education and traditional career opportunities.  In designing the company’s operational model, Lijjat kept the women’s real pain points in mind. They knew that offering them jobs at a papadam factory wouldn’t be any help to them, because they couldn’t just abandon their responsibilities at home.  So, instead, they let them work from home, allowing them to continue looking after their children and elderly parents. They also paid them at the end of each workday, so they could influence their families’ daily household spending.  Like Lijjat, you need to design your product to address the real pain points of the people you want to serve. Once you’ve done that, you then have to figure out the capabilities you need to tap into to bring that design to life. These can be tangible or intangible resources. For example, Netflix needs viewership data to power its recommendation algorithm, and Airbnb needs people’s trust so they’ll rent out their apartments to strangers.  Finally, don’t forget logistics: How are you going to sell, deliver, and provide service for your product? This gets into the nitty-gritty details of your business model. Once you have a clear and compelling vision, you’ll see your product in a whole new light. It’s no longer just an electric car, a papadam, or whatever the case may be. It’s a mechanism for creating the change you want to see in the world. The question then becomes, how do you put that mechanism into motion? Well, you need to create a strategy – the next step of the RPT approach to product development.  RPT has a nifty mnemonic for remembering the main components of a winning, vision-driven strategy: RDCL, pronounced “radical.” It stands for: Real pain points, Design, Capabilities, and Logistics. Put these ingredients together, and you’ll be ready to put your vision into practice.  The key message here is: Learn people’s real pain points, so you know the design, capabilities, and logistics your product needs to succeed.  In 1959, Lijjat began as a team of seven people rolling out papadams on a terrace. Today, they employ over 45,000 women. One of the keys to that success has been knowing the real pain points of impoverished women in India.  These women live in a deeply patriarchal society, where they have little control over their household income, carry the burden of being their families’ primary caregivers, and lack access to formal education and traditional career opportunities.  In designing the company’s operational model, Lijjat kept the women’s real pain points in mind. They knew that offering them jobs at a papadam factory wouldn’t be any help to them, because they couldn’t just abandon their responsibilities at home.  So, instead, they let them work from home, allowing them to continue looking after their children and elderly parents. They also paid them at the end of each workday, so they could influence their families’ daily household spending.  Like Lijjat, you need to design your product to address the real pain points of the people you want to serve. Once you’ve done that, you then have to figure out the capabilities you need to tap into to bring that design to life. These can be tangible or intangible resources. For example, Netflix needs viewership data to power its recommendation algorithm, and Airbnb needs people’s trust so they’ll rent out their apartments to strangers.  Finally, don’t forget logistics: How are you going to sell, deliver, and provide service for your product? This gets into the nitty-gritty details of your business model. Once you have a clear and compelling vision, you’ll see your product in a whole new light. It’s no longer just an electric car, a papadam, or whatever the case may be. It’s a mechanism for creating the change you want to see in the world. The question then becomes, how do you put that mechanism into motion? Well, you need to create a strategy – the next step of the RPT approach to product development.  RPT has a nifty mnemonic for remembering the main components of a winning, vision-driven strategy: RDCL, pronounced “radical.” It stands for: Real pain points, Design, Capabilities, and Logistics. Put these ingredients together, and you’ll be ready to put your vision into practice.  The key message here is: Learn people’s real pain points, so you know the design, capabilities, and logistics your product needs to succeed.  In 1959, Lijjat began as a team of seven people rolling out papadams on a terrace. Today, they employ over 45,000 women. One of the keys to that success has been knowing the real pain points of impoverished women in India.  These women live in a deeply patriarchal society, where they have little control over their household income, carry the burden of being their families’ primary caregivers, and lack access to formal education and traditional career opportunities.  In designing the company’s operational model, Lijjat kept the women’s real pain points in mind. They knew that offering them jobs at a papadam factory wouldn’t be any help to them, because they couldn’t just abandon their responsibilities at home.  So, instead, they let them work from home, allowing them to continue looking after their children and elderly parents. They also paid them at the end of each workday, so they could influence their families’ daily household spending.  Like Lijjat, you need to design your product to address the real pain points of the people you want to serve. Once you’ve done that, you then have to figure out the capabilities you need to tap into to bring that design to life. These can be tangible or intangible resources. For example, Netflix needs viewership data to power its recommendation algorithm, and Airbnb needs people’s trust so they’ll rent out their apartments to strangers.  Finally, don’t forget logistics: How are you going to sell, deliver, and provide service for your product? This gets into the nitty-gritty details of your business model. So now you have your strategy. This gives you a bird’s-eye, big-picture view of how you’re going to achieve your vision. But everything seems so simple from high above. Once you get closer to the ground, the world appears a much more complicated place. That’s especially true in the business realm, where you’re faced with all sorts of tough decisions, trade-offs, and pressures on a daily basis.  How do you navigate this rough terrain in a vision-driven way? That’s what the next step of the RTP approach is about.  Here’s the key message: To be successful without losing sight of your vision, remember your priorities. As a decision-maker in a vision-driven company, you’ve got two top priorities at the end of the day: making progress toward your vision, and surviving as a business. Every choice you make will either be a good or bad fit for your vision, and it will either mitigate or increase the risks to your company’s survival.  That leads to four possibilities, which can be envisioned as four quadrants in your decision-making space. You could make a choice that meets both imperatives: a good vision fit that also mitigates risk. That’s the ideal quadrant. Conversely, you could make a choice that serves neither imperative: a bad vision fit that also increases risk. That’s the danger quadrant.  These first two possibilities are no-brainers. Generally speaking, you should embrace choices in the Ideal quadrant and avoid choices in the danger quadrant.  The next two possibilities are where things get tricky. You could make a choice that’s a good vision fit, but increases risk. This is the quadrant where you're investing in the vision. For instance, putting money into R&D is an expense that negatively affects your short-term bottom line – but it could give you the technology you need to achieve your long-term goals.  Finally, you could make a choice that’s a bad vision fit, but decreases risk. For example, maybe you could take on a project that’s irrelevant to your vision, but would allow you to secure some much-needed funding.  Sometimes you have to do things like that. Just be clear about what you’re doing: taking time and resources away from your vision. In doing so, you’re entering the quadrant in which you’re building vision debt. That’s OK, as long you don’t accumulate too much debt, and as long as you don’t wait too long to pay it off by investing in your vision.  That said, you should avoid building vision debt as much as possible, and you should more often prioritize investing in your vision than mitigating risk. So now you have your strategy. This gives you a bird’s-eye, big-picture view of how you’re going to achieve your vision. But everything seems so simple from high above. Once you get closer to the ground, the world appears a much more complicated place. That’s especially true in the business realm, where you’re faced with all sorts of tough decisions, trade-offs, and pressures on a daily basis.  How do you navigate this rough terrain in a vision-driven way? That’s what the next step of the RTP approach is about.  Here’s the key message: To be successful without losing sight of your vision, remember your priorities. As a decision-maker in a vision-driven company, you’ve got two top priorities at the end of the day: making progress toward your vision, and surviving as a business. Every choice you make will either be a good or bad fit for your vision, and it will either mitigate or increase the risks to your company’s survival.  That leads to four possibilities, which can be envisioned as four quadrants in your decision-making space. You could make a choice that meets both imperatives: a good vision fit that also mitigates risk. That’s the ideal quadrant. Conversely, you could make a choice that serves neither imperative: a bad vision fit that also increases risk. That’s the danger quadrant.  These first two possibilities are no-brainers. Generally speaking, you should embrace choices in the Ideal quadrant and avoid choices in the danger quadrant.  The next two possibilities are where things get tricky. You could make a choice that’s a good vision fit, but increases risk. This is the quadrant where you're investing in the vision. For instance, putting money into R&D is an expense that negatively affects your short-term bottom line – but it could give you the technology you need to achieve your long-term goals.  Finally, you could make a choice that’s a bad vision fit, but decreases risk. For example, maybe you could take on a project that’s irrelevant to your vision, but would allow you to secure some much-needed funding.  Sometimes you have to do things like that. Just be clear about what you’re doing: taking time and resources away from your vision. In doing so, you’re entering the quadrant in which you’re building vision debt. That’s OK, as long you don’t accumulate too much debt, and as long as you don’t wait too long to pay it off by investing in your vision.  That said, you should avoid building vision debt as much as possible, and you should more often prioritize investing in your vision than mitigating risk. So now you have your strategy. This gives you a bird’s-eye, big-picture view of how you’re going to achieve your vision. But everything seems so simple from high above. Once you get closer to the ground, the world appears a much more complicated place. That’s especially true in the business realm, where you’re faced with all sorts of tough decisions, trade-offs, and pressures on a daily basis.  How do you navigate this rough terrain in a vision-driven way? That’s what the next step of the RTP approach is about.  Here’s the key message: To be successful without losing sight of your vision, remember your priorities. As a decision-maker in a vision-driven company, you’ve got two top priorities at the end of the day: making progress toward your vision, and surviving as a business. Every choice you make will either be a good or bad fit for your vision, and it will either mitigate or increase the risks to your company’s survival.  That leads to four possibilities, which can be envisioned as four quadrants in your decision-making space. You could make a choice that meets both imperatives: a good vision fit that also mitigates risk. That’s the ideal quadrant. Conversely, you could make a choice that serves neither imperative: a bad vision fit that also increases risk. That’s the danger quadrant.  These first two possibilities are no-brainers. Generally speaking, you should embrace choices in the Ideal quadrant and avoid choices in the danger quadrant.  The next two possibilities are where things get tricky. You could make a choice that’s a good vision fit, but increases risk. This is the quadrant where you're investing in the vision. For instance, putting money into R&D is an expense that negatively affects your short-term bottom line – but it could give you the technology you need to achieve your long-term goals.  Finally, you could make a choice that’s a bad vision fit, but decreases risk. For example, maybe you could take on a project that’s irrelevant to your vision, but would allow you to secure some much-needed funding.  Sometimes you have to do things like that. Just be clear about what you’re doing: taking time and resources away from your vision. In doing so, you’re entering the quadrant in which you’re building vision debt. That’s OK, as long you don’t accumulate too much debt, and as long as you don’t wait too long to pay it off by investing in your vision.  That said, you should avoid building vision debt as much as possible, and you should more often prioritize investing in your vision than mitigating risk. With your vision, strategy, and decision-making priorities in place, you’re now ready to get down to business with developing your product. According to conventional wisdom, your next step would be to test your product on the market, see how customers respond to it, and iterate accordingly.  But the story of an app called Nack illustrates the danger of this approach. The vision behind the app was to allow people to practice the Italian tradition of suspended coffee, where you go to a coffee shop and buy two coffees: one for you and one for a stranger.  Following the conventional wisdom, Paul Haun, the founder of Nack, kept a close eye on his app’s usage metrics and kept iterating it based on whatever drove the numbers up. Everything seemed to be going great – until, one day, Haun made a terrible discovery.  The key message is this: When testing and iterating your product, make sure you’re measuring the right things.  Nack’s number of daily users was growing, and so was the amount of time users were spending on the app. These are the sort of metrics that app developers usually prize, so Haun was delighted – until he realized that most people were just using the app to score free coffee. They weren’t using Nack in the intended spirit, which was to not just receive a random act of kindness, but to pay it forward to another person. You get a free coffee, and then you buy one for someone else, who then repeats the gift-giving for a third person, and so on. That’s how it’s supposed to work. The moral? Yes, you should be testing and measuring people’s responses to your product and iterating it accordingly. But make sure you choose the right metrics – things that measure whether you’re making progress toward achieving your vision.  For Nack, the key metric wasn’t how many people were using the app, but how many of them were gifting coffee to others. Once they realized these numbers were low, they iterated the app to address the problem. In the new iteration of Nack, users received two free coffees when they got a gift: one for themselves and one to give to someone else. This way, the app taught them to get into the spirit of gift-giving.  Soon, a substantial percentage of users were spending money to buy coffee for other people. With your vision, strategy, and decision-making priorities in place, you’re now ready to get down to business with developing your product. According to conventional wisdom, your next step would be to test your product on the market, see how customers respond to it, and iterate accordingly.  But the story of an app called Nack illustrates the danger of this approach. The vision behind the app was to allow people to practice the Italian tradition of suspended coffee, where you go to a coffee shop and buy two coffees: one for you and one for a stranger.  Following the conventional wisdom, Paul Haun, the founder of Nack, kept a close eye on his app’s usage metrics and kept iterating it based on whatever drove the numbers up. Everything seemed to be going great – until, one day, Haun made a terrible discovery.  The key message is this: When testing and iterating your product, make sure you’re measuring the right things.  Nack’s number of daily users was growing, and so was the amount of time users were spending on the app. These are the sort of metrics that app developers usually prize, so Haun was delighted – until he realized that most people were just using the app to score free coffee. They weren’t using Nack in the intended spirit, which was to not just receive a random act of kindness, but to pay it forward to another person. You get a free coffee, and then you buy one for someone else, who then repeats the gift-giving for a third person, and so on. That’s how it’s supposed to work. The moral? Yes, you should be testing and measuring people’s responses to your product and iterating it accordingly. But make sure you choose the right metrics – things that measure whether you’re making progress toward achieving your vision.  For Nack, the key metric wasn’t how many people were using the app, but how many of them were gifting coffee to others. Once they realized these numbers were low, they iterated the app to address the problem. In the new iteration of Nack, users received two free coffees when they got a gift: one for themselves and one to give to someone else. This way, the app taught them to get into the spirit of gift-giving.  Soon, a substantial percentage of users were spending money to buy coffee for other people. With your vision, strategy, and decision-making priorities in place, you’re now ready to get down to business with developing your product. According to conventional wisdom, your next step would be to test your product on the market, see how customers respond to it, and iterate accordingly.  But the story of an app called Nack illustrates the danger of this approach. The vision behind the app was to allow people to practice the Italian tradition of suspended coffee, where you go to a coffee shop and buy two coffees: one for you and one for a stranger.  Following the conventional wisdom, Paul Haun, the founder of Nack, kept a close eye on his app’s usage metrics and kept iterating it based on whatever drove the numbers up. Everything seemed to be going great – until, one day, Haun made a terrible discovery.  The key message is this: When testing and iterating your product, make sure you’re measuring the right things.  Nack’s number of daily users was growing, and so was the amount of time users were spending on the app. These are the sort of metrics that app developers usually prize, so Haun was delighted – until he realized that most people were just using the app to score free coffee. They weren’t using Nack in the intended spirit, which was to not just receive a random act of kindness, but to pay it forward to another person. You get a free coffee, and then you buy one for someone else, who then repeats the gift-giving for a third person, and so on. That’s how it’s supposed to work. The moral? Yes, you should be testing and measuring people’s responses to your product and iterating it accordingly. But make sure you choose the right metrics – things that measure whether you’re making progress toward achieving your vision.  For Nack, the key metric wasn’t how many people were using the app, but how many of them were gifting coffee to others. Once they realized these numbers were low, they iterated the app to address the problem. In the new iteration of Nack, users received two free coffees when they got a gift: one for themselves and one to give to someone else. This way, the app taught them to get into the spirit of gift-giving.  Soon, a substantial percentage of users were spending money to buy coffee for other people. With your vision, strategy, and decision-making priorities in place, you’re now ready to get down to business with developing your product. According to conventional wisdom, your next step would be to test your product on the market, see how customers respond to it, and iterate accordingly.  But the story of an app called Nack illustrates the danger of this approach. The vision behind the app was to allow people to practice the Italian tradition of suspended coffee, where you go to a coffee shop and buy two coffees: one for you and one for a stranger.  Following the conventional wisdom, Paul Haun, the founder of Nack, kept a close eye on his app’s usage metrics and kept iterating it based on whatever drove the numbers up. Everything seemed to be going great – until, one day, Haun made a terrible discovery.  The key message is this: When testing and iterating your product, make sure you’re measuring the right things.  Nack’s number of daily users was growing, and so was the amount of time users were spending on the app. These are the sort of metrics that app developers usually prize, so Haun was delighted – until he realized that most people were just using the app to score free coffee. They weren’t using Nack in the intended spirit, which was to not just receive a random act of kindness, but to pay it forward to another person. You get a free coffee, and then you buy one for someone else, who then repeats the gift-giving for a third person, and so on. That’s how it’s supposed to work. The moral? Yes, you should be testing and measuring people’s responses to your product and iterating it accordingly. But make sure you choose the right metrics – things that measure whether you’re making progress toward achieving your vision.  For Nack, the key metric wasn’t how many people were using the app, but how many of them were gifting coffee to others. Once they realized these numbers were low, they iterated the app to address the problem. In the new iteration of Nack, users received two free coffees when they got a gift: one for themselves and one to give to someone else. This way, the app taught them to get into the spirit of gift-giving.  Soon, a substantial percentage of users were spending money to buy coffee for other people. With your vision, strategy, and decision-making priorities in place, you’re now ready to get down to business with developing your product. According to conventional wisdom, your next step would be to test your product on the market, see how customers respond to it, and iterate accordingly.  But the story of an app called Nack illustrates the danger of this approach. The vision behind the app was to allow people to practice the Italian tradition of suspended coffee, where you go to a coffee shop and buy two coffees: one for you and one for a stranger.  Following the conventional wisdom, Paul Haun, the founder of Nack, kept a close eye on his app’s usage metrics and kept iterating it based on whatever drove the numbers up. Everything seemed to be going great – until, one day, Haun made a terrible discovery.  The key message is this: When testing and iterating your product, make sure you’re measuring the right things.  Nack’s number of daily users was growing, and so was the amount of time users were spending on the app. These are the sort of metrics that app developers usually prize, so Haun was delighted – until he realized that most people were just using the app to score free coffee. They weren’t using Nack in the intended spirit, which was to not just receive a random act of kindness, but to pay it forward to another person. You get a free coffee, and then you buy one for someone else, who then repeats the gift-giving for a third person, and so on. That’s how it’s supposed to work. The moral? Yes, you should be testing and measuring people’s responses to your product and iterating it accordingly. But make sure you choose the right metrics – things that measure whether you’re making progress toward achieving your vision.  For Nack, the key metric wasn’t how many people were using the app, but how many of them were gifting coffee to others. Once they realized these numbers were low, they iterated the app to address the problem. In the new iteration of Nack, users received two free coffees when they got a gift: one for themselves and one to give to someone else. This way, the app taught them to get into the spirit of gift-giving.  Soon, a substantial percentage of users were spending money to buy coffee for other people. You’ve now seen how to take a vision-driven approach with four of the five steps of the RTP approach to product development. But assuming you’re a leader or employee of a company that engages a number of other people, it’s not enough for you to be vision-driven. Everyone else needs to be vision-driven, too. And that brings us to the final step of the RPT approach: creating a vision-driven company culture.  “Company culture” has become a bit of a vague buzz phrase lately. To make it more concrete, think of it as the sum total of everyone’s experiences of working at your company. These experiences can fall into four quadrants, based on whether your work is satisfying or urgent.  The first and most important quadrant is meaningful work.  The key message here is: Create a vision-driven company culture by emphasizing meaningful, vision-driven work.  Meaningful work includes any task that feels satisfying, but isn’t urgent. It contributes to a larger purpose, like achieving your company’s long-term vision. But it’s not time-sensitive. Your company’s short-term survival and growth aren’t at stake. To enable everyone to feel mission-driven, you should make sure as much work falls into this quadrant as possible.  Second, there’s the heroism quadrant. This is work that feels satisfying, but is also urgent. Here, you’re doing something that matters, but you’re doing it under time pressure. Scrambling to fix a critical, time-sensitive customer issue is one example. This kind of work can feel exciting in short bursts, but it becomes exhausting after a while. To prevent burnout, you should keep it within reasonable limits.  Third, there’s the organizational cactus quadrant. This is work that’s tedious but has to get done, like filling out administrative forms. Much of this work can and should be minimized, to allow people to focus on meaningful work.  Finally, there’s the soul sucking quadrant, where you’re doing things that are neither satisfying nor necessary. Examples of this include sitting in meetings in which you have to bite your tongue, because you can’t disagree without fear of retaliation. These experiences should be eliminated as much as possible.  How do you create a company culture that fits this pattern? Well, think of your culture as a product, and use the RTP approach. Create a clear and compelling vision of the culture you want to have. Then design a RDCL strategy to achieve that vision. Last but not least, make wise decisions and collect meaningful measurements of your results by using vision-driven metrics and priorities. You’ve now seen how to take a vision-driven approach with four of the five steps of the RTP approach to product development. But assuming you’re a leader or employee of a company that engages a number of other people, it’s not enough for you to be vision-driven. Everyone else needs to be vision-driven, too. And that brings us to the final step of the RPT approach: creating a vision-driven company culture.  “Company culture” has become a bit of a vague buzz phrase lately. To make it more concrete, think of it as the sum total of everyone’s experiences of working at your company. These experiences can fall into four quadrants, based on whether your work is satisfying or urgent.  The first and most important quadrant is meaningful work.  The key message here is: Create a vision-driven company culture by emphasizing meaningful, vision-driven work.  Meaningful work includes any task that feels satisfying, but isn’t urgent. It contributes to a larger purpose, like achieving your company’s long-term vision. But it’s not time-sensitive. Your company’s short-term survival and growth aren’t at stake. To enable everyone to feel mission-driven, you should make sure as much work falls into this quadrant as possible.  Second, there’s the heroism quadrant. This is work that feels satisfying, but is also urgent. Here, you’re doing something that matters, but you’re doing it under time pressure. Scrambling to fix a critical, time-sensitive customer issue is one example. This kind of work can feel exciting in short bursts, but it becomes exhausting after a while. To prevent burnout, you should keep it within reasonable limits.  Third, there’s the organizational cactus quadrant. This is work that’s tedious but has to get done, like filling out administrative forms. Much of this work can and should be minimized, to allow people to focus on meaningful work.  Finally, there’s the soul sucking quadrant, where you’re doing things that are neither satisfying nor necessary. Examples of this include sitting in meetings in which you have to bite your tongue, because you can’t disagree without fear of retaliation. These experiences should be eliminated as much as possible.  How do you create a company culture that fits this pattern? Well, think of your culture as a product, and use the RTP approach. Create a clear and compelling vision of the culture you want to have. Then design a RDCL strategy to achieve that vision. Last but not least, make wise decisions and collect meaningful measurements of your results by using vision-driven metrics and priorities. You’ve now seen how to take a vision-driven approach with four of the five steps of the RTP approach to product development. But assuming you’re a leader or employee of a company that engages a number of other people, it’s not enough for you to be vision-driven. Everyone else needs to be vision-driven, too. And that brings us to the final step of the RPT approach: creating a vision-driven company culture.  “Company culture” has become a bit of a vague buzz phrase lately. To make it more concrete, think of it as the sum total of everyone’s experiences of working at your company. These experiences can fall into four quadrants, based on whether your work is satisfying or urgent.  The first and most important quadrant is meaningful work.  The key message here is: Create a vision-driven company culture by emphasizing meaningful, vision-driven work.  Meaningful work includes any task that feels satisfying, but isn’t urgent. It contributes to a larger purpose, like achieving your company’s long-term vision. But it’s not time-sensitive. Your company’s short-term survival and growth aren’t at stake. To enable everyone to feel mission-driven, you should make sure as much work falls into this quadrant as possible.  Second, there’s the heroism quadrant. This is work that feels satisfying, but is also urgent. Here, you’re doing something that matters, but you’re doing it under time pressure. Scrambling to fix a critical, time-sensitive customer issue is one example. This kind of work can feel exciting in short bursts, but it becomes exhausting after a while. To prevent burnout, you should keep it within reasonable limits.  Third, there’s the organizational cactus quadrant. This is work that’s tedious but has to get done, like filling out administrative forms. Much of this work can and should be minimized, to allow people to focus on meaningful work.  Finally, there’s the soul sucking quadrant, where you’re doing things that are neither satisfying nor necessary. Examples of this include sitting in meetings in which you have to bite your tongue, because you can’t disagree without fear of retaliation. These experiences should be eliminated as much as possible.  How do you create a company culture that fits this pattern? Well, think of your culture as a product, and use the RTP approach. Create a clear and compelling vision of the culture you want to have. Then design a RDCL strategy to achieve that vision. Last but not least, make wise decisions and collect meaningful measurements of your results by using vision-driven metrics and priorities. You’ve now seen how to take a vision-driven approach with four of the five steps of the RTP approach to product development. But assuming you’re a leader or employee of a company that engages a number of other people, it’s not enough for you to be vision-driven. Everyone else needs to be vision-driven, too. And that brings us to the final step of the RPT approach: creating a vision-driven company culture.  “Company culture” has become a bit of a vague buzz phrase lately. To make it more concrete, think of it as the sum total of everyone’s experiences of working at your company. These experiences can fall into four quadrants, based on whether your work is satisfying or urgent.  The first and most important quadrant is meaningful work.  The key message here is: Create a vision-driven company culture by emphasizing meaningful, vision-driven work.  Meaningful work includes any task that feels satisfying, but isn’t urgent. It contributes to a larger purpose, like achieving your company’s long-term vision. But it’s not time-sensitive. Your company’s short-term survival and growth aren’t at stake. To enable everyone to feel mission-driven, you should make sure as much work falls into this quadrant as possible.  Second, there’s the heroism quadrant. This is work that feels satisfying, but is also urgent. Here, you’re doing something that matters, but you’re doing it under time pressure. Scrambling to fix a critical, time-sensitive customer issue is one example. This kind of work can feel exciting in short bursts, but it becomes exhausting after a while. To prevent burnout, you should keep it within reasonable limits.  Third, there’s the organizational cactus quadrant. This is work that’s tedious but has to get done, like filling out administrative forms. Much of this work can and should be minimized, to allow people to focus on meaningful work.  Finally, there’s the soul sucking quadrant, where you’re doing things that are neither satisfying nor necessary. Examples of this include sitting in meetings in which you have to bite your tongue, because you can’t disagree without fear of retaliation. These experiences should be eliminated as much as possible.  How do you create a company culture that fits this pattern? Well, think of your culture as a product, and use the RTP approach. Create a clear and compelling vision of the culture you want to have. Then design a RDCL strategy to achieve that vision. Last but not least, make wise decisions and collect meaningful measurements of your results by using vision-driven metrics and priorities. You’ve now seen how to take a vision-driven approach with four of the five steps of the RTP approach to product development. But assuming you’re a leader or employee of a company that engages a number of other people, it’s not enough for you to be vision-driven. Everyone else needs to be vision-driven, too. And that brings us to the final step of the RPT approach: creating a vision-driven company culture.  “Company culture” has become a bit of a vague buzz phrase lately. To make it more concrete, think of it as the sum total of everyone’s experiences of working at your company. These experiences can fall into four quadrants, based on whether your work is satisfying or urgent.  The first and most important quadrant is meaningful work.  The key message here is: Create a vision-driven company culture by emphasizing meaningful, vision-driven work.  Meaningful work includes any task that feels satisfying, but isn’t urgent. It contributes to a larger purpose, like achieving your company’s long-term vision. But it’s not time-sensitive. Your company’s short-term survival and growth aren’t at stake. To enable everyone to feel mission-driven, you should make sure as much work falls into this quadrant as possible.  Second, there’s the heroism quadrant. This is work that feels satisfying, but is also urgent. Here, you’re doing something that matters, but you’re doing it under time pressure. Scrambling to fix a critical, time-sensitive customer issue is one example. This kind of work can feel exciting in short bursts, but it becomes exhausting after a while. To prevent burnout, you should keep it within reasonable limits.  Third, there’s the organizational cactus quadrant. This is work that’s tedious but has to get done, like filling out administrative forms. Much of this work can and should be minimized, to allow people to focus on meaningful work.  Finally, there’s the soul sucking quadrant, where you’re doing things that are neither satisfying nor necessary. Examples of this include sitting in meetings in which you have to bite your tongue, because you can’t disagree without fear of retaliation. These experiences should be eliminated as much as possible.  How do you create a company culture that fits this pattern? Well, think of your culture as a product, and use the RTP approach. Create a clear and compelling vision of the culture you want to have. Then design a RDCL strategy to achieve that vision. Last but not least, make wise decisions and collect meaningful measurements of your results by using vision-driven metrics and priorities."
